image: docker:latest

services:
 - docker:dind

cache:
 paths:
  - vendor/

stages:
 - test
 - deploy

test_testing:
 stage: test
 only:
  - /^(?:(?!staging|master).)*$\r?\n?/
 before_script:
  - export STAGE=test
  - docker info
  - apk update
  - apk upgrade
  - apk add python3 python3-dev py-pip build-base libffi-dev openssl-dev
  - pip install docker-compose
  - cp composer-deploy.json composer.json
 script:
  - echo running tests in $STAGE environment
  - docker image prune -f
  - docker-compose -f docker-compose-test.yml build
  - docker-compose -f docker-compose-test.yml up
 artifacts:
  paths:
   - vendor/

deploy_develop:
 stage: deploy
 environment:
  name: development
  url: doubble-dev.wbcstaging.com
 only:
  - develop
 before_script:
  - apk update
  - apk upgrade
  - 'command -v ssh-agent || ( apk add openssh-client )'
  - eval $(ssh-agent -s)
  - echo "$DOUBLE_SSH_PRIVATE_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - chmod +x ./.gitlab/depoy-scripts/deploy_staging.sh
 script:
  - ssh wbc@140.82.8.14 DEPLOY_ENV="develop" 'bash -s' < ./.gitlab/depoy-scripts/deploy_staging.sh

deploy_staging:
 stage: deploy
 environment:
  name: staging
  url: doubble.wbcstaging.com
 only:
  - staging
 before_script:
  - apk update
  - apk upgrade
  - 'command -v ssh-agent || ( apk add openssh-client )'
  - eval $(ssh-agent -s)
  - echo "$DOUBLE_SSH_PRIVATE_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - chmod +x ./.gitlab/depoy-scripts/deploy_staging.sh
 script:
  - ssh wbc@140.82.8.14 DEPLOY_ENV="staging" 'bash -s' < ./.gitlab/depoy-scripts/deploy_staging.sh
