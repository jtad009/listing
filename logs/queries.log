2020-06-24 13:50:32 Debug: duration=15 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:50:32 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `articles`
2020-06-24 13:50:32 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles`
2020-06-24 13:50:32 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles' AND rc.TABLE_NAME = 'articles'
2020-06-24 13:50:32 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles'
2020-06-24 13:50:33 Debug: duration=2 rows=12 SHOW FULL COLUMNS FROM `users`
2020-06-24 13:50:33 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2020-06-24 13:50:33 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-06-24 13:50:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-06-24 13:50:33 Debug: duration=1 rows=9 SHOW FULL COLUMNS FROM `comments`
2020-06-24 13:50:33 Debug: duration=1 rows=1 SHOW INDEXES FROM `comments`
2020-06-24 13:50:33 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'comments' AND rc.TABLE_NAME = 'comments'
2020-06-24 13:50:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'comments'
2020-06-24 13:50:33 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `categories`
2020-06-24 13:50:33 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-06-24 13:50:33 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-06-24 13:50:33 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-06-24 13:50:33 Debug: duration=4 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-06-24 13:50:33 Debug: duration=1 rows=1 SHOW INDEXES FROM `tags`
2020-06-24 13:50:33 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-06-24 13:50:33 Debug: duration=3 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-06-24 13:50:33 Debug: duration=3 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 13:50:33 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:50:34 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `articles_tags`
2020-06-24 13:50:34 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles_tags`
2020-06-24 13:50:34 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles_tags' AND rc.TABLE_NAME = 'articles_tags'
2020-06-24 13:50:34 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles_tags'
2020-06-24 13:50:34 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:50:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 13:50:34 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 13:50:34 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:50:34 Debug: duration=0 rows=0 BEGIN
2020-06-24 13:50:34 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 13:50:34 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 13:50:34 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 13:50:35 Debug: duration=0 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 13:50:35 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 13:50:35 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 13:53:48 Debug: duration=13 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:53:48 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `articles`
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles`
2020-06-24 13:53:49 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles' AND rc.TABLE_NAME = 'articles'
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles'
2020-06-24 13:53:49 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `users`
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2020-06-24 13:53:49 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-06-24 13:53:49 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `comments`
2020-06-24 13:53:49 Debug: duration=2 rows=1 SHOW INDEXES FROM `comments`
2020-06-24 13:53:49 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'comments' AND rc.TABLE_NAME = 'comments'
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'comments'
2020-06-24 13:53:49 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `categories`
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-06-24 13:53:49 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-06-24 13:53:49 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW INDEXES FROM `tags`
2020-06-24 13:53:49 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-06-24 13:53:49 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-06-24 13:53:49 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 13:53:49 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:53:49 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `articles_tags`
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles_tags`
2020-06-24 13:53:49 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles_tags' AND rc.TABLE_NAME = 'articles_tags'
2020-06-24 13:53:49 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles_tags'
2020-06-24 13:53:49 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:53:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 13:53:49 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 13:53:50 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:53:50 Debug: duration=0 rows=0 BEGIN
2020-06-24 13:53:50 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 13:53:50 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 13:53:50 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 13:53:50 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 13:53:50 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 13:53:50 Debug: duration=2 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 13:55:07 Debug: duration=11 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:55:08 Debug: duration=2 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 13:55:08 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:55:08 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:55:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 13:55:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 13:55:09 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:55:09 Debug: duration=0 rows=0 BEGIN
2020-06-24 13:55:09 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 13:55:09 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 13:55:09 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 13:55:09 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 13:55:09 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 13:55:09 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 13:57:44 Debug: duration=8 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:57:44 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `articles`
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles`
2020-06-24 13:57:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles' AND rc.TABLE_NAME = 'articles'
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles'
2020-06-24 13:57:44 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `users`
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2020-06-24 13:57:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-06-24 13:57:44 Debug: duration=1 rows=9 SHOW FULL COLUMNS FROM `comments`
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `comments`
2020-06-24 13:57:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'comments' AND rc.TABLE_NAME = 'comments'
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'comments'
2020-06-24 13:57:44 Debug: duration=4 rows=5 SHOW FULL COLUMNS FROM `categories`
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-06-24 13:57:44 Debug: duration=4 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-06-24 13:57:44 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `tags`
2020-06-24 13:57:44 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-06-24 13:57:44 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 13:57:44 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:57:44 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `articles_tags`
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles_tags`
2020-06-24 13:57:44 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles_tags' AND rc.TABLE_NAME = 'articles_tags'
2020-06-24 13:57:44 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles_tags'
2020-06-24 13:57:44 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:57:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 13:57:44 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 13:57:45 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:57:45 Debug: duration=0 rows=0 BEGIN
2020-06-24 13:57:45 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 13:57:45 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 13:57:45 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 13:57:45 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 13:57:45 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 13:57:45 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 13:58:26 Debug: duration=14 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:58:27 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 13:58:27 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:58:27 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:58:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 13:58:27 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 13:58:27 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:58:27 Debug: duration=0 rows=0 BEGIN
2020-06-24 13:58:27 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 13:58:27 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 13:58:27 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 13:58:28 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 13:58:28 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 13:58:28 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 13:58:28 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = '5b5c0aef-67a8-391d-b92d-7e38a7ee0b11'
2020-06-24 13:58:28 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:58:28 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'Lorem-ipsum-dolor-sit-amet'
2020-06-24 13:58:28 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `media`
2020-06-24 13:58:28 Debug: duration=1 rows=1 SHOW INDEXES FROM `media`
2020-06-24 13:58:28 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'media' AND rc.TABLE_NAME = 'media'
2020-06-24 13:58:28 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'media'
2020-06-24 13:58:28 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 13:59:48 Debug: duration=4 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:59:48 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `articles`
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles`
2020-06-24 13:59:48 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles' AND rc.TABLE_NAME = 'articles'
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles'
2020-06-24 13:59:48 Debug: duration=2 rows=12 SHOW FULL COLUMNS FROM `users`
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2020-06-24 13:59:48 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-06-24 13:59:48 Debug: duration=2 rows=9 SHOW FULL COLUMNS FROM `comments`
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW INDEXES FROM `comments`
2020-06-24 13:59:48 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'comments' AND rc.TABLE_NAME = 'comments'
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'comments'
2020-06-24 13:59:48 Debug: duration=4 rows=5 SHOW FULL COLUMNS FROM `categories`
2020-06-24 13:59:48 Debug: duration=6 rows=1 SHOW INDEXES FROM `categories`
2020-06-24 13:59:48 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-06-24 13:59:48 Debug: duration=6 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-06-24 13:59:48 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW INDEXES FROM `tags`
2020-06-24 13:59:48 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-06-24 13:59:48 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 13:59:48 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:59:48 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `articles_tags`
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles_tags`
2020-06-24 13:59:48 Debug: duration=1 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles_tags' AND rc.TABLE_NAME = 'articles_tags'
2020-06-24 13:59:48 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles_tags'
2020-06-24 13:59:48 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 13:59:48 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 13:59:48 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 13:59:48 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:59:48 Debug: duration=0 rows=0 BEGIN
2020-06-24 13:59:49 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 13:59:49 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 13:59:49 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 13:59:49 Debug: duration=0 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 13:59:49 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 13:59:49 Debug: duration=0 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 13:59:49 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = '8b60b90d-3724-38f4-8465-8828de3c99fa'
2020-06-24 13:59:49 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 13:59:49 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'Lorem-ipsum-dolor-sit-amet'
2020-06-24 13:59:49 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 14:01:09 Debug: duration=7 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:01:10 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 14:01:10 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:01:10 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:01:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 14:01:10 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 14:01:10 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:01:10 Debug: duration=0 rows=0 BEGIN
2020-06-24 14:01:10 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 14:01:10 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 14:01:10 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 14:01:10 Debug: duration=0 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 14:01:11 Debug: duration=0 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 14:01:11 Debug: duration=0 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 14:01:11 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = '7d212b5d-e11f-3c8c-8625-92ceda4127d2'
2020-06-24 14:01:11 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:01:11 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'Lorem-ipsum-dolor-sit-amet'
2020-06-24 14:01:11 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `media`
2020-06-24 14:01:11 Debug: duration=1 rows=1 SHOW INDEXES FROM `media`
2020-06-24 14:01:11 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'media' AND rc.TABLE_NAME = 'media'
2020-06-24 14:01:11 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'media'
2020-06-24 14:01:11 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 14:01:55 Debug: duration=7 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:01:55 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `articles`
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles`
2020-06-24 14:01:55 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles' AND rc.TABLE_NAME = 'articles'
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles'
2020-06-24 14:01:55 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `users`
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2020-06-24 14:01:55 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-06-24 14:01:55 Debug: duration=4 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-06-24 14:01:55 Debug: duration=1 rows=9 SHOW FULL COLUMNS FROM `comments`
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `comments`
2020-06-24 14:01:55 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'comments' AND rc.TABLE_NAME = 'comments'
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'comments'
2020-06-24 14:01:55 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `categories`
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-06-24 14:01:55 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-06-24 14:01:55 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `tags`
2020-06-24 14:01:55 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-06-24 14:01:55 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 14:01:55 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:01:55 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `articles_tags`
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles_tags`
2020-06-24 14:01:55 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles_tags' AND rc.TABLE_NAME = 'articles_tags'
2020-06-24 14:01:55 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles_tags'
2020-06-24 14:01:55 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:01:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 14:01:55 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 14:01:56 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:01:56 Debug: duration=0 rows=0 BEGIN
2020-06-24 14:01:56 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 14:01:56 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 14:01:56 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 14:01:56 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 14:01:56 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 14:01:56 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 14:01:56 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = 'f6beb4b6-488a-36f1-a62e-a16e0fea8662'
2020-06-24 14:01:56 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:01:56 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'Lorem-ipsum-dolor-sit-amet'
2020-06-24 14:01:56 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 14:03:07 Debug: duration=10 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:03:07 Debug: duration=2 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 14:03:07 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:03:07 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:03:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 14:03:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 14:03:08 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:03:08 Debug: duration=0 rows=0 BEGIN
2020-06-24 14:03:08 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 14:03:08 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 14:03:08 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 14:03:08 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 14:03:08 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 14:03:08 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 14:03:08 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = 'f84344bb-a6e2-37ed-a84d-2b2b8c64f7cc'
2020-06-24 14:03:09 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:03:09 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'Lorem-ipsum-dolor-sit-amet'
2020-06-24 14:03:09 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 14:04:24 Debug: duration=15 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:04:24 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `articles`
2020-06-24 14:04:24 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles`
2020-06-24 14:04:24 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles' AND rc.TABLE_NAME = 'articles'
2020-06-24 14:04:24 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles'
2020-06-24 14:04:24 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `users`
2020-06-24 14:04:24 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2020-06-24 14:04:24 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-06-24 14:04:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-06-24 14:04:24 Debug: duration=8 rows=9 SHOW FULL COLUMNS FROM `comments`
2020-06-24 14:04:24 Debug: duration=2 rows=1 SHOW INDEXES FROM `comments`
2020-06-24 14:04:24 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'comments' AND rc.TABLE_NAME = 'comments'
2020-06-24 14:04:24 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'comments'
2020-06-24 14:04:24 Debug: duration=2 rows=5 SHOW FULL COLUMNS FROM `categories`
2020-06-24 14:04:24 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-06-24 14:04:24 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-06-24 14:04:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-06-24 14:04:24 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-06-24 14:04:24 Debug: duration=1 rows=1 SHOW INDEXES FROM `tags`
2020-06-24 14:04:24 Debug: duration=3 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-06-24 14:04:24 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-06-24 14:04:25 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 14:04:25 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:04:25 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `articles_tags`
2020-06-24 14:04:25 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles_tags`
2020-06-24 14:04:25 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'articles_tags' AND rc.TABLE_NAME = 'articles_tags'
2020-06-24 14:04:25 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles_tags'
2020-06-24 14:04:25 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:04:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 14:04:25 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 14:04:25 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:04:25 Debug: duration=0 rows=0 BEGIN
2020-06-24 14:04:26 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 14:04:26 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 14:04:26 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 14:04:26 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 14:04:26 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 14:04:26 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 14:04:26 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = 'affa38d3-ef10-3634-8b5e-a1d83e0baf3a'
2020-06-24 14:04:26 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:04:26 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'Lorem-ipsum-dolor-sit-amet'
2020-06-24 14:04:26 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `media`
2020-06-24 14:04:26 Debug: duration=1 rows=1 SHOW INDEXES FROM `media`
2020-06-24 14:04:26 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_blog' AND kcu.TABLE_NAME = 'media' AND rc.TABLE_NAME = 'media'
2020-06-24 14:04:26 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'media'
2020-06-24 14:04:26 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 14:23:08 Debug: duration=7 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:23:08 Debug: duration=2 rows=12 SHOW FULL COLUMNS FROM `articles`
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW INDEXES FROM `articles`
2020-06-24 14:23:08 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_doubble' AND kcu.TABLE_NAME = 'articles' AND rc.TABLE_NAME = 'articles'
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles'
2020-06-24 14:23:08 Debug: duration=1 rows=12 SHOW FULL COLUMNS FROM `users`
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW INDEXES FROM `users`
2020-06-24 14:23:08 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_doubble' AND kcu.TABLE_NAME = 'users' AND rc.TABLE_NAME = 'users'
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'users'
2020-06-24 14:23:08 Debug: duration=1 rows=9 SHOW FULL COLUMNS FROM `comments`
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW INDEXES FROM `comments`
2020-06-24 14:23:08 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_doubble' AND kcu.TABLE_NAME = 'comments' AND rc.TABLE_NAME = 'comments'
2020-06-24 14:23:08 Debug: duration=2 rows=1 SHOW TABLE STATUS WHERE Name = 'comments'
2020-06-24 14:23:08 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `categories`
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW INDEXES FROM `categories`
2020-06-24 14:23:08 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_doubble' AND kcu.TABLE_NAME = 'categories' AND rc.TABLE_NAME = 'categories'
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'categories'
2020-06-24 14:23:08 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `tags`
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW INDEXES FROM `tags`
2020-06-24 14:23:08 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_doubble' AND kcu.TABLE_NAME = 'tags' AND rc.TABLE_NAME = 'tags'
2020-06-24 14:23:08 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'tags'
2020-06-24 14:23:09 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1 ORDER BY Articles.created DESC LIMIT 9 OFFSET 0
2020-06-24 14:23:09 Debug: duration=1 rows=0 SELECT Comments.id AS `Comments__id`, Comments.article_id AS `Comments__article_id`, Comments.comment AS `Comments__comment`, Comments.published AS `Comments__published`, Comments.name AS `Comments__name`, Comments.email AS `Comments__email`, Comments.website AS `Comments__website`, Comments.created AS `Comments__created`, Comments.modified AS `Comments__modified` FROM comments Comments WHERE Comments.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:23:09 Debug: duration=1 rows=4 SHOW FULL COLUMNS FROM `articles_tags`
2020-06-24 14:23:09 Debug: duration=0 rows=1 SHOW INDEXES FROM `articles_tags`
2020-06-24 14:23:09 Debug: duration=11 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_doubble' AND kcu.TABLE_NAME = 'articles_tags' AND rc.TABLE_NAME = 'articles_tags'
2020-06-24 14:23:09 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'articles_tags'
2020-06-24 14:23:09 Debug: duration=1 rows=0 SELECT ArticlesTags.id AS `Tags_CJoin__id`, ArticlesTags.article_id AS `Tags_CJoin__article_id`, ArticlesTags.tag_id AS `Tags_CJoin__tag_id`, ArticlesTags.created AS `Tags_CJoin__created`, Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag`, Tags.created AS `Tags__created`, Tags.modified AS `Tags__modified` FROM tags Tags INNER JOIN articles_tags ArticlesTags ON Tags.id = (ArticlesTags.tag_id) WHERE ArticlesTags.article_id in ('f1d8dba0-3f75-4258-a80e-2e07db05842c')
2020-06-24 14:23:09 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles LEFT JOIN users Users ON Users.id = (Articles.user_id) LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) WHERE published = 1
2020-06-24 14:23:09 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE published = 1
2020-06-24 14:23:09 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:23:09 Debug: duration=0 rows=0 BEGIN
2020-06-24 14:23:09 Debug: duration=1 rows=0 SELECT 1 AS `existing` FROM categories Categories WHERE Categories.id = 1 LIMIT 1
2020-06-24 14:23:09 Debug: duration=0 rows=0 SELECT 1 AS `existing` FROM users Users WHERE Users.id = 1 LIMIT 1
2020-06-24 14:23:09 Debug: duration=0 rows=0 ROLLBACK
2020-06-24 14:23:10 Debug: duration=1 rows=0 SELECT Categories.id AS `Categories__id`, Categories.category AS `Categories__category` FROM categories Categories LIMIT 200
2020-06-24 14:23:10 Debug: duration=1 rows=0 SELECT Users.id AS `Users__id`, Users.username AS `Users__username` FROM users Users WHERE id = 1 LIMIT 200
2020-06-24 14:23:10 Debug: duration=1 rows=0 SELECT Tags.id AS `Tags__id`, Tags.tag AS `Tags__tag` FROM tags Tags LIMIT 200
2020-06-24 14:23:10 Debug: duration=0 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = '1a72f07a-9c44-327d-aed6-8543e07384bb'
2020-06-24 14:23:10 Debug: duration=1 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:23:10 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'Lorem-ipsum-dolor-sit-amet'
2020-06-24 14:23:10 Debug: duration=1 rows=5 SHOW FULL COLUMNS FROM `media`
2020-06-24 14:23:10 Debug: duration=1 rows=1 SHOW INDEXES FROM `media`
2020-06-24 14:23:10 Debug: duration=2 rows=0 SELECT * FROM information_schema.key_column_usage AS kcu
            INNER JOIN information_schema.referential_constraints AS rc
            ON (
                kcu.CONSTRAINT_NAME = rc.CONSTRAINT_NAME
                AND kcu.CONSTRAINT_SCHEMA = rc.CONSTRAINT_SCHEMA
            )
            WHERE kcu.TABLE_SCHEMA = 'test_doubble' AND kcu.TABLE_NAME = 'media' AND rc.TABLE_NAME = 'media'
2020-06-24 14:23:10 Debug: duration=1 rows=1 SHOW TABLE STATUS WHERE Name = 'media'
2020-06-24 14:23:10 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 14:23:10 Debug: duration=0 rows=1 SELECT slug from articles LIMIT 50
2020-06-24 14:23:10 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE Articles.slug = 'editf1d8dba0-3f75-4258-a80e-2e07db05842c'
2020-06-24 14:23:10 Debug: duration=1 rows=0 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image`, Categories.id AS `Categories__id`, Categories.category AS `Categories__category`, Categories.article_count AS `Categories__article_count`, Categories.created AS `Categories__created`, Categories.modified AS `Categories__modified`, Users.id AS `Users__id`, Users.username AS `Users__username`, Users.first_name AS `Users__first_name`, Users.last_name AS `Users__last_name`, Users.article_count AS `Users__article_count`, Users.created AS `Users__created`, Users.bio AS `Users__bio`, Users.password AS `Users__password`, Users.canWrite AS `Users__canWrite`, Users.image AS `Users__image`, Users.email AS `Users__email`, Users.api_key AS `Users__api_key` FROM articles Articles LEFT JOIN categories Categories ON Categories.id = (Articles.category_id) LEFT JOIN users Users ON Users.id = (Articles.user_id) WHERE Articles.id = '0' LIMIT 1
2020-06-24 14:23:10 Debug: duration=1 rows=1 SELECT (COUNT(*)) AS `count` FROM articles Articles WHERE id = 'f1d8dba0-3f75-4258-a80e-2e07db05842c'
2020-06-24 14:23:10 Debug: duration=1 rows=1 SELECT Articles.id AS `Articles__id`, Articles.category_id AS `Articles__category_id`, Articles.title AS `Articles__title`, Articles.slug AS `Articles__slug`, Articles.article AS `Articles__article`, Articles.published AS `Articles__published`, Articles.comment_count AS `Articles__comment_count`, Articles.view_count AS `Articles__view_count`, Articles.user_id AS `Articles__user_id`, Articles.created AS `Articles__created`, Articles.modified AS `Articles__modified`, Articles.cover_image AS `Articles__cover_image` FROM articles Articles WHERE id = 'f1d8dba0-3f75-4258-a80e-2e07db05842c'
